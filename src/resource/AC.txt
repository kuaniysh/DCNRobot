*** Settings ***
Documentation     控制AC的关键字集合，使用规范(与交换机类似)：
...
...               ---
...               1. *打开/关闭console:*
...               - 在直接包含test case的test suite内通过关键字Open Console连接，一般放在setup内
...               - *注意: 在执行Open Console的test suite结束时，需要关闭cosole，在teardown里使用Close Console*
...               - *注意: 需要在每个直接包含测试例的test suite内使用Open Console，teardown里使用Close Console*
...               - 测试模块初始化的过程，如果需要控制AC，需要在初始化关键字的开始使用Open Console，在初始化关键字的结束时关闭Close Console，一般初始化关键字在最高层test suite的setup中
...               - 测试模块清理配置的过程，如果需要控制AC，需要在清理配置的关键字的开始使用Open Console，在清理配置的关键字的结束时关闭Close Console，一般清理配置的关键字在最高层test suite的teardown中
...
...               ---
...               2. *执行命令,获取结果*
...               - 一般执行命令的起始地点在enable模式，关键字Enable Mode
...               - 执行单条命令并返回命令执行后的输出，关键字 Exec Cmd，该关键字的执行起点依据上一条命令，并不是在enable模式下
...               - 一般使能某个功能，是一串命令的组合，关键字 Exec Cmd List，该关键字的执行起点在enable模式,按命令list的顺序依次配置执行，返回的是每条命令的输出信息的list
...               - 关键字 Exec Cmd List In ConfigMode, 该关键字的执行起点在config模式,按命令list的顺序依次配置执行,返回的是每条命令的输出信息的列表
...               - 关键字 Exec Cmd List In WirelessMode，该关键字的执行起点在wireless模式,按命令list的顺序依次配置执行,返回的是每条命令的输出信息的列表
...
...               ---
...               3. *Debug相关:*
...               - 打开Debug: Start Debug
...               - 获取Debug信息: Get Debug
...               - 关闭Debug: Stop Debug
...               - 获取Debug信息，正则匹配成功时退出：Get Debug Output Until Expect
...               - 获取Debug信息，直到等待时间结束： Get Debug Output Until Timeout
...
...               举例：
...               | Start Debug | ac1 | debug driver |
...               | 等待固定时间 或 进行其他的操作(除对s1操作) |
...               | ${output}= | Get Debug | ac1 |
...               | Stop Debug | ac1 |
...               | 下面可对output内容进行判断 |
...
...               或者
...               | Start Debug | ac1 | debug driver |
...               | ${output}= |Get Debug Output Until Expect | ac1 | 正则表达式 |
...               | Stop Debug | ac1 |
...
...               ---
...               4. *常用命令:*
...               - Apply AP Profile
...               - Wait For AP Profile Apply OK：等待AP Profile 下发成功
...               - Reload AC
...               - Write Config
...               - Show Version
...               - Set Default
...               - Get Cpu Mac
...               - Get Vlan Mac
...               - Enter BootRom From Img
...               - Enter BootRom From BootRom
...
...
...               ---
...               5. *注意事项*
...               - 命令执行结束的标志为匹配到提示符，timeout时间为1分钟，如果命令的执行时间多于1分钟，可以参考Reload AC关键字的实现，用Telnet.Set Timeout ${timeout}暂时修改timeout时间，然后执行完毕后再恢复默认值
...               - 在一个test suite里console的完整执行log会另存一份，当执行关键字Close Console时，会进行写入，有需要可以查询该关键字
Library           Collections
Library           String
Library           ../lib/Tools.py
Library           ../lib/MyTelnet.py    WITH NAME    Telnet
Library           OperatingSystem

*** Variables ***
${wifi_ac_prompt}    (?m)^[-a-zA-Z0-9_]{1,30}(\\(.*\\))*([#>])|^\\[Boot\\]:|^BCM\.[0-9]>|^->|^--More--|Exit from bcm shell mode|^Host IP Address:|^Server IP Address:
${wifi_ac_prompt_is_regexp}    ${True}
${wifi_ac_default_log_level}    ${None}
${wifi_ac_terminal_type}    vt100
${wifi_ac_terminal_emulation}    ${True}
${wifi_ac_timeout}    1 minute
${wifi_ac_regexp_reload}    Mac\\sAddr\\s
${wifi_ac_monitor}    ${True}
${wifi_ac_monitor_loglevel}    INFO
${wifi_ac_login_regexp}    (?m)^Username:
${wifi_ac_username}    admin
${wifi_ac_password}    admin
${wifi_ac_newline}    LF

*** Keywords ***
Open Console
    [Arguments]    ${ip}    ${port}    ${alias}
    [Documentation]    打开console连接，一般用于test suite的setup中
    ...
    ...    注意：Telnet实例的生存范围是test suite，即在同一个test suite里采用Open Console打开的连接是可用的，在另一个test suite中是不能引用的，故需要在每个test suite里建立setup来Open Console及在teardown中Close Console
    ...
    ...    \ \ - 默认情况，timeout为1分钟
    ...    \ - 默认情况，会打开monitor选项，即将console的输出另存一份，以获得整个console的输出
    ...
    ...    args：
    ...    - ip \ \ \ \ ： \ \ CCM地址
    ...    - port \ ： \ CCM端口号
    ...    - alias \ ： \ \ 别名，一般在测试例集中定义
    ...
    ...    return： 无
    ...
    ...    example：
    ...    | Open Console | 172.16.11.51 | ${10001} | s1 |
    ...    | Open Console | ${s1_ip} | ${s1_port} | ${s1_alias} |
    Telnet.Open Connection    ${ip}    ${alias}    ${port}    timeout=${wifi_ac_timeout}    prompt_is_regexp=${wifi_ac_prompt_is_regexp}    prompt=${wifi_ac_prompt}
    ...    default_log_level=${wifi_ac_default_log_level}    terminal_emulation=${wifi_ac_terminal_emulation}    terminal_type=${wifi_ac_terminal_type}    monitor=${wifi_ac_monitor}    newline=${wifi_ac_newline}
    AC.Enable Mode    ${alias}
    AC.Set Exec TimeOut    ${alias}

Enable Mode
    [Arguments]    ${alias}
    [Documentation]    设备进入Enable模式，同时执行terminal length 0，以防止--more--
    ...
    ...    args:
    ...    - alias 别名
    Telnet.Switch Connection    ${alias}
    Telnet.Read
    Telnet.Write Bare    \x03
    ${output}=    Telnet.Read Until Regexp    ${wifi_ac_login_regexp}    ${wifi_ac_prompt}
    ${loginFlag}=    Tools.Is Match From String    ${output}    ${wifi_ac_login_regexp}
    Run Keyword If    ${loginFlag}    AC.Login    ${alias}
    Telnet.Read
    Telnet.Execute Command    enable
    Telnet.Execute Command    terminal length 0

Exec Cmd
    [Arguments]    ${alias}    ${cmd}
    [Documentation]    向设备输入命令，一般情况，建议使用Exec Cmd List，这样可以更清晰的表达这组命令的意义
    ...
    ...    args：
    ...    - alias
    ...    - cmd ： 命令
    ...
    ...    return：
    ...    - output：设备对该命令的响应
    Telnet.Switch Connection    ${alias}
    Telnet.Read
    ${output}=    Telnet.Execute Command    ${cmd}
    [Return]    ${output}

Close Console
    [Arguments]    ${alias}    ${monitor_loglevel}=${wifi_ac_monitor_loglevel}    ${monitor}=${wifi_ac_monitor}
    [Documentation]    关闭console连接，一般用于test suite的teardown中
    ...
    ...    注意：Telnet实例的生存范围是test suite，即在同一个test suite里采用Open Console打开的连接是可用的，在另一个test suite中是不能引用的，故需要在每个test suite里建立setup来Open Console及在teardown中Close Console
    ...
    ...    args：
    ...    - alias \ ： \ \ 别名，一般在测试例集中定义
    ...
    ...    return： 无
    ...
    ...    example：
    ...    | Close Console | s1 |
    ...    | Close Console | ${s1_alias} |
    Telnet.Switch Connection    ${alias}
    Telnet.Set Monitor    ${monitor}
    Telnet.Close Connection    ${monitor_loglevel}

Close All Console
    [Documentation]    该关键字不能将console的全部输出记录到log里，不建议使用
    ...
    ...    Closes all open connections and empties the connection cache.
    ...
    ...    If multiple connections are opened, this keyword should be used in a test or suite teardown to make sure that all connections are closed. It is not an error is some of the connections have already been closed by `Close Connection`.
    ...
    ...    After this keyword, new indexes returned by `Open Connection` keyword are reset to 1.
    Telnet.Close All Connections

Exec Cmd Until Regexp
    [Arguments]    ${alias}    ${cmd}    ${regexp}
    [Documentation]    该关键字用于执行一条命令，用正则匹配返回信息，直到匹配成功，匹配不成功会导致该关键字失败
    ...
    ...    注意：该关键字不会读取返回信息在匹配字符后面的内容，会导致后面的读取信息中包含该关键字的内容，容易出错，请慎用，如必须采用，请在该关键字后执行Telnet.Read来消耗掉整个返回信息
    ...
    ...    Exec cmd and reads output until any of the `expected` regular expressions match.
    ...
    ...    This keyword accepts any number of regular expressions patterns or compiled Python regular expression objects as arguments. Text up to and including the first match to any of the regular expressions is returned and logged. If no match is found, this keyword fails. How much to wait for the output depends on the configured timeout.
    ...
    ...    See the documentation of Python `re` module for more information about the supported regular expression syntax. Notice that possible backslashes need to be escaped in Robot Framework test data.
    ...
    ...    Examples:
    ...    | Exec Cmd Until Regexp | s1 | show version | 1.0 |
    Telnet.Switch Connection    ${alias}
    Telnet.Read
    Telnet.Write    ${cmd}
    ${output}=    Telnet.Read Until Regexp    ${regexp}
    [Return]    ${output}

Exec Cmd List
    [Arguments]    ${alias}    @{cmd_list}
    [Documentation]    KeyWord: Exec Cmd List
    ...
    ...    \ exec command list based on enable mode
    ...
    ...    args:
    ...
    ...    - ${alias}: alias name of console,built on keyword of Open Console
    ...    - @{cmd_list}: list of cmd string
    ...
    ...    example:
    ...    | Exec Cmd List | ${s1_alias} | show version |
    ...    | Exec Cmd List | ${s1_alias} | config | interface ${s1p1} | shutdown |
    AC.Enable Mode    ${alias}
    ${output_list}    Create List
    : FOR    ${cmd}    IN    @{cmd_list}
    \    ${out}=    Telnet.Execute Command    ${cmd}
    \    Collections.Append To List    ${output_list}    ${out}
    Log List    ${output_list}
    [Return]    ${output_list}

Exec Cmd List In ConfigMode
    [Arguments]    ${alias}    @{cmd_list}
    [Documentation]    KeyWord: Exec Cmd List In ConfigMode
    ...
    ...    \ exec command list based on config mode
    ...
    ...    args:
    ...
    ...    - ${alias}: alias name of console,built on keyword of Open Console
    ...    - @{cmd_list}: list of cmd string
    ...
    ...    example:
    ...    | Exec Cmd List In ConfigMode | ${s1_alias} | interface ${s1p1} | shutdown |
    AC.Enable Mode    ${alias}
    Telnet.Execute Command    config
    ${output_list}    Create List
    : FOR    ${cmd}    IN    @{cmd_list}
    \    ${out}=    Telnet.Execute Command    ${cmd}
    \    Collections.Append To List    ${output_list}    ${out}
    Log List    ${output_list}

Reload AC
    [Arguments]    ${alias}    ${write}=${True}    ${wait}=60    ${regexp_reload}=${wifi_ac_regexp_reload}    ${timeout}=20 minutes
    [Documentation]    重启AC设备
    ...
    ...    args：
    ...    - ${alias}：Open Console时设置的别名
    ...    - ${write}: 是否保存配置，默认为True
    ...    - ${wait}: \ 匹配到重启成功字符后的等待时间，默认为10s，一般不用修改
    ...    - ${regexp_reload}: 重启完成的匹配字符，默认为User Access Verification
    ...    - ${timeout}: 最长等待时间，默认为20分钟，超过会报错
    Run Keyword If    ${write}    AC.Write Config    ${alias}
    Run Keyword Unless    ${write}    AC.Enable Mode    ${alias}
    Telnet.Write    reload
    Telnet.Read Until Regexp    \\[Y/N\\]
    Telnet.Write    Y
    Telnet.Set Timeout    ${timeout}
    Telnet.Read Until Regexp    ${regexp_reload}
    Telnet.Set Timeout    ${wifi_ac_timeout}
    Sleep    ${wait}
    Telnet.Read
    AC.Enable Mode    ${alias}
    AC.Set Exec TimeOut    ${alias}

Write Config
    [Arguments]    ${alias}
    [Documentation]    保存AC的配置
    ...
    ...    args：
    ...    - ${alias}：Open Console时设置的别名
    AC.Enable Mode    ${alias}
    Telnet.Write    write
    ${output}=    Telnet.Read Until Regexp    \\[Y/N\\]:    [-a-zA-Z0-9_. ]{1,30}(\\(.*\\))*#
    ${writeFlag}=    Tools.Is Match From String    ${output}    \\[Y/N\\]:
    Run Keyword If    ${writeFlag}    Telnet.Write    Y
    Run Keyword If    ${writeFlag}    Telnet.Read Until Prompt
    Run Keyword Unless    ${writeFlag}    Telnet.Read

Set Default
    [Arguments]    ${alias}
    [Documentation]    set default switch
    ...
    ...    args:
    ...    - ${alias} ailas name of the console connection, built on keyWord of Open Console
    ...
    ...    example:
    ...    | Set Default | ${s1_alias} |
    AC.Enable Mode    ${alias}
    Telnet.Write    set default
    Telnet.Read Until Regexp    \\[Y/N\\]    [-a-zA-Z0-9_. ]{1,30}(\\(.*\\))*#
    Telnet.Write    Y
    Telnet.Read Until Prompt

Show Version
    [Arguments]    ${alias}
    [Documentation]    获取AC的版本信息
    ...
    ...    args：
    ...    - ${alias}：Open Console时设置的别名
    AC.Enable Mode    ${alias}
    ${output}=    Telnet.Execute Command    show version
    Log    ${output}
    [Return]    ${output}

Set Exec TimeOut
    [Arguments]    ${alias}    ${timeout}=0
    [Documentation]    设置AC的exec-timeout
    ...
    ...    args：
    ...    - ${alias}：Open Console时设置的别名
    ...    - ${timeout}: 默认为0
    AC.Exec Cmd List    ${alias}    config    exec-timeout ${timeout}

Set WatchDog Disable
    [Arguments]    ${alias}
    [Documentation]    关闭AC的看门狗
    ...
    ...    args：
    ...    - ${alias}：Open Console时设置的别名
    AC.Exec Cmd List    ${alias}    config    watchdog disable

Get Cpu Mac
    [Arguments]    ${alias}    ${input}=show interface detail | include address is
    [Documentation]    获取AC的Cpu mac
    ...
    ...    args：
    ...    - ${alias}：Open Console时设置的别名
    ...    - ${input}: 获取mac输入的命令 默认为show interface detail | include address is
    AC.Enable Mode    ${alias}
    ${output}=    Telnet.Execute Command    ${input}
    ${cpuMac}=    Tools.Get Value From String    ${output}    .*?,\\s+address is\\s(.*?)\\s
    Should Not Be Equal    ${cpuMac}    ${None}
    [Return]    ${cpuMac}

Get Vlan Mac
    [Arguments]    ${alias}
    [Documentation]    获取AC的vlan mac
    ...
    ...    args：
    ...    - ${alias}：Open Console时设置的别名
    AC.Enable Mode    ${alias}
    ${output}=    Telnet.Execute Command    show interface vlan 1
    ${isIntVlan1}=    Tools.Is Match From String    ${output}    .*? doesn't exist or error
    Run Keyword If    ${isIntVlan1} == ${True}    AC.Exec Cmd List In ConfigMode    ${alias}    interface vlan 1
    Run Keyword If    ${isIntVlan1} == ${True}    Sleep    2
    ${output}=    Telnet.Execute Command    show interface vlan 1
    ${vlanMac}=    Tools.Get Value From String    ${output}    .*?,\\s+address is\\s(.*?)\\s
    Should Not Be Equal    ${vlanMac}    ${None}
    Run Keyword If    ${isIntVlan1} == ${True}    AC.Exec Cmd List In ConfigMode    ${alias}    no interface vlan 1
    [Return]    ${vlanMac}

Enter BootRom From Img
    [Arguments]    ${alias}    ${regexp_testram}=Testing RAM    ${regexp_bootrom}=\\[Boot\\]:    ${timeout}=3 minutes
    [Documentation]    从img进入bootrom
    ...
    ...    args：
    ...    - ${alias}：Open Console时设置的别名
    ...    - ${regexp_testram}: 内存检测的匹配字符，默认为Testing RAM
    ...    - ${regexp_bootrom}: 进入bootrom的匹配字符，默认为[Boot]:
    ...    - ${timeout}: 最长等待时间，默认为3分钟，超过会报错
    AC.Enable Mode    ${alias}
    Telnet.Write    reload
    Telnet.Read Until Regexp    \\[Y/N\\]
    Telnet.Write    Y
    Telnet.Set Timeout    ${timeout}
    Telnet.Read Until Regexp    ${regexp_testram}
    Telnet.Write    \x02
    Telnet.Read Until Regexp    ${regexp_bootrom}
    Telnet.Set Timeout    ${wifi_ac_timeout}
    Telnet.Read

Enter BootRom From BootRom
    [Arguments]    ${alias}    ${regexp_testram}=Testing RAM    ${regexp_bootrom}=\\[Boot\\]:    ${timeout}=3 minutes
    [Documentation]    从bootrom进入bootrom
    ...
    ...    args：
    ...    - ${alias}：Open Console时设置的别名
    ...    - ${regexp_testram}: 内存检测的匹配字符，默认为Testing RAM
    ...    - ${regexp_bootrom}: 进入bootrom的匹配字符，默认为[Boot]:
    ...    - ${timeout}: 最长等待时间，默认为3分钟，超过会报错
    Telnet.Switch Connection    ${alias}
    Telnet.Read
    Telnet.Write    reboot
    Telnet.Set Timeout    ${timeout}
    Telnet.Read Until Regexp    ${regexp_testram}
    Telnet.Write    \x02
    Telnet.Read Until Regexp    ${regexp_bootrom}
    Telnet.Set Timeout    ${wifi_ac_timeout}
    Telnet.Read

Login
    [Arguments]    ${alias}    ${username}=${wifi_ac_username}    ${password}=${wifi_ac_password}
    [Documentation]    登陆AC
    ...
    ...    args：
    ...    - ${alias}：Open Console时设置的别名
    ...    - ${username}: 用户名，默认为admin
    ...    - ${password}: 密码，默认为admin
    Telnet.Switch Connection    ${alias}
    Telnet.Read
    Telnet.Write    ${username}
    Telnet.Read Until Regexp    Password:
    Telnet.Write    ${password}
    Telnet.Read Until Prompt

Exec Cmd List In WirelessMode
    [Arguments]    ${alias}    @{cmd_list}
    [Documentation]    KeyWord: Exec Cmd List In ConfigMode
    ...
    ...    \ exec command list based on config mode
    ...
    ...    args:
    ...
    ...    - ${alias}: alias name of console,built on keyword of Open Console
    ...    - @{cmd_list}: list of cmd string
    ...
    ...    example:
    ...    | Exec Cmd List In ConfigMode | ${s1_alias} | interface ${s1p1} | shutdown |
    AC.Exec Cmd List In ConfigMode    ${alias}    wireless
    ${output_list}    Create List
    : FOR    ${cmd}    IN    @{cmd_list}
    \    ${out}=    Telnet.Execute Command    ${cmd}
    \    Collections.Append To List    ${output_list}    ${out}
    Log List    ${output_list}

Wait For AP Profile Apply OK
    [Arguments]    ${alias}    ${profileid}    ${apmac}=${None}    ${timeout}=${120}    ${cmd}=show wireless ap status
    [Documentation]    等待AP profile下发成功
    ...
    ...    args：
    ...    - ${alias}：Open Console时设置的别名
    ...    - ${profileId}: profile id
    ...    - ${apmac} : mac地址，默认为None，默认会查找所有的profile id，当设置mac后，会查找指定的mac的profile id
    ...    - ${timeout}: 最长等待时间，默认为120s
    ...    - ${cmd}: 观察下发是否成功的命令
    ...
    ...    注意：超过timeout后，不会报错，关键字会返回，进行下一个关键字的执行
    AC.Enable Mode    ${alias}
    ${apmacFlag}=    Tools.Is None    ${apmac}
    ${matchMac}=    Set Variable If    ${apmacFlag}    ([0-9A-F]{2}-){5}[0-9A-F]    ${apmac}
    Sleep    10
    : FOR    ${index}    IN RANGE    0    ${timeout}    10
    \    ${output}=    Telnet.Execute Command    ${cmd}
    \    ${apProfileNum}=    Tools.Find All Num From String    ${output}    (?im)${matchMac}.*?\\s+${profileid}\\s
    \    ${apstatusNum}=    Tools.Find All Num From String    ${output}    (?im)${matchMac}.*?\\s+${profileid}\\s+Managed\\s+Success
    \    Run Keyword If    ${apstatusNum} == ${apProfileNum}    Exit For Loop
    \    Sleep    10

Apply AP Profile
    [Arguments]    ${alias}    ${profileId}    ${timeout}=${130}
    [Documentation]    AC向AP下发profile
    ...
    ...    args：
    ...    - ${alias}：Open Console时设置的别名
    ...    - ${profileId}: profile id
    ...    - ${timeout}: 最长等待时间，默认为130s
    ...
    ...    注意：超过timeout后，不会报错，关键字会返回，进行下一个关键字的执行
    AC.Enable Mode    ${alias}
    Telnet.Write    wireless ap profile apply ${profileId}
    ${output}=    Telnet.Read Until Regexp    \\[Y/N\\]    [-a-zA-Z0-9_. ]{1,30}(\\(.*\\))*#
    : FOR    ${index}    IN RANGE    0    ${timeout}    10
    \    ${writeFlag}=    Tools.Is Match From String    ${output}    \\[Y/N\\]
    \    ${exitFlag}=    Tools.Is Match From String    ${output}    (?m)^[-a-zA-Z0-9_. ]{1,30}(\\(.*\\))*#
    \    Run Keyword If    ${exitFlag}    Exit For Loop
    \    Run Keyword If    ${index} != 0    Sleep    10
    \    Run Keyword If    ${writeFlag}    Telnet.Write    Y
    \    ${output}=    Telnet.Read Until Regexp    \\[Y/N\\]    [-a-zA-Z0-9_. ]{1,30}(\\(.*\\))*#
    Telnet.Read
    AC.Enable Mode    ${alias}

Get Debug Output Until Expect
    [Arguments]    ${alias}    ${expect}    ${timeout}=${180}
    [Documentation]    在debug信息中查找expect信息，并返回信息，注意如果没有expect信息，在timeout到时候会返回全部信息
    ...
    ...    参数：
    ...    - alias：设备console别名
    ...    - expect： 要查找的信息
    ...    - timeout：默认180s，注意单位为s
    ...
    ...    返回：是否查找成功，输出信息
    ...
    ...    用法：
    ...    - 先使用关键字Start Debug
    ...    - 然后Get Debug Output Until Expect
    ...    - 最后关闭debug： Stop Debug
    Telnet.Switch Connection    ${alias}
    Telnet.Set Timeout    ${timeout}
    Telnet.Set Terminal Emulator    ${False}
    @{res}=    Telnet.Debug Read Until Regexp    ${expect}
    Telnet.Set Timeout    ${wifi_ac_timeout}
    Telnet.Set Terminal Emulator    ${True}
    Log    ${res}
    [Return]    @{res}

Stop Debug
    [Arguments]    ${alias}    ${cmd}=no debug all
    [Documentation]    关闭 debug
    ...
    ...    参数：
    ...    - alias：设备console别名
    ...    - cmd： 默认为ctrl-o
    Telnet.Switch Connection    ${alias}
    Telnet.Write    ${cmd}
    Telnet.Read Until Prompt
    Telnet.Read

Start Debug
    [Arguments]    ${alias}    ${cmd}
    [Documentation]    打开debug
    ...
    ...    参数：
    ...    - alias：设备console别名
    ...    - cmd：debug命令
    AC.Enable Mode    ${alias}
    Telnet.Write    ${cmd}

Get Debug Output Until Timeout
    [Arguments]    ${alias}    ${timeout}
    [Documentation]    获取timeout时间内的debug信息
    ...
    ...    参数：
    ...    - alias：设备console别名
    ...    - timeout： \ 注意单位为s
    ...
    ...    返回：timeout时间内的输出信息
    ...
    ...    用法：
    ...    - 先使用关键字Start Debug
    ...    - 然后Get Debug Output Until Timeout
    ...    - 最后关闭debug： Stop Debug
    Telnet.Switch Connection    ${alias}
    Sleep    ${timeout}
    ${output}=    Telnet.My Read Eager
    Log    ${output}
    [Return]    ${output}

Get Debug
    [Arguments]    ${alias}
    [Documentation]    获取debug信息,该关键字会读取console的内容并立刻返回
    ...
    ...    参数：
    ...    - alias：设备console别名
    ...
    ...    返回：debug输出信息
    ...
    ...    用法：
    ...    - 先使用关键字Start Debug
    ...    - 然后可以进行其他操作
    ...    - Get Debug，获取第2步操作过程中的debug信息
    ...    - 最后关闭debug： Stop Debug
    Telnet.Switch Connection    ${alias}
    ${output}=    Telnet.My Read Eager
    Log    ${output}
