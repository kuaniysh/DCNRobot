*** Settings ***
Documentation     带宽限制与port-channel交叉测试.port-channel与成员端口均不能配置,加入时配置必须一致,不一致无法加入聚合组.
...               - step 1 S1P1与S1P3配置带宽限制后, 加入聚合端口, 检查聚合成功,成员端口上有风暴抑制配置.
...               - step 2 带宽抑制功能正常生效
...               - step 3 port-channel下没有bandwidth control配置
...               - step 4 port-channel不能修改和删除bandwidth配置
...               - step 5 port-channel成员端口不能修改和删除bandwidth配置
...               - step 6 删除s1p1与s1p3的port-channel配置, 修改s1p1与s1p3的带宽抑制为不同值后, 重新聚合,聚合失败
...               - step 7 恢复初始配置
Suite Setup       init Suite test
Suite Teardown    uninit suite test
Resource          resource_bandwidth_control.txt

*** Test Cases ***
1.2.5.6.1 带宽限制与Portchannel交叉
    [Documentation]    S1P1与S1P3配置带宽限制后, 加入聚合端口, 检查聚合成功,成员端口上有风暴抑制配置.
    Log Step Start    Step1    S1P1与S1P3配置带宽限制后, 加入聚合端口, 检查聚合成功,有风暴抑制配置.
    ${expect_value_receive}=    Set Bandwidth Control    ${s1_alias}    ${s1p1}    10000    direction=receive
    ${expect_value_trans}=    Set Bandwidth Control    ${s1_alias}    ${s1p1}    20000    direction=transmit
    Set Bandwidth Control    ${s1_alias}    ${s1p3}    10000    direction=receive
    Set Bandwidth Control    ${s1_alias}    ${s1p3}    20000    direction=transmit
    ${p1_rcv}=    Check Port Show Run    ${s1_alias}    ${s1p1}    ${CMD_BANDWIDTH_CONTROL} \\d+ receive
    ${p1_trn}=    Check Port Show Run    ${s1_alias}    ${s1p1}    ${CMD_BANDWIDTH_CONTROL} \\d+ receive
    ${p3_rcv}=    Check Port Show Run    ${s1_alias}    ${s1p3}    ${CMD_BANDWIDTH_CONTROL} \\d+ receive
    ${p3_trn}=    Check Port Show Run    ${s1_alias}    ${s1p3}    ${CMD_BANDWIDTH_CONTROL} \\d+ receive
    Run Keyword And Continue On Failure    Should be true    ${p1_rcv}==${p1_trn}==${p3_rcv}==${p3_trn}==True    ${s1p1}与${s1p3}应该有相应的带宽控制配置
    Exec Cmd List In ConfigMode    ${s1_alias}    port-group 1
    Set Port Channel Member    ${s1_alias}    ${s1p1}    channel_name=1    mode=on
    Set Port Channel Member    ${s1_alias}    ${s1p3}    channel_name=1    mode=on
    ${p1_result}=    Check Port Channel Member    ${s1_alias}    ${s1p1}    channel_name=1
    ${p3_result}=    Check Port Channel Member    ${s1_alias}    ${s1p3}    channel_name=1
    Run Keyword And Continue On Failure    Should be true    ${p1_result}==${p3_result}==True    ${s1p1}与${s1p3}应该是port-channel 1的成员端口
    Log Step END    Step1    S1P1与S1P3配置带宽限制后, 加入聚合端口, 检查聚合成功,有风暴抑制配置.
    #
    #
    Log Step Start    step 2    带宽抑制功能正常生效
    ${pktNum1}=    Evaluate    int(${send_rate}/64/8*5)    #计算5s的发包数量
    ${pktNum2}=    Evaluate    int(${send_rate}/64/8*${timeRange})    #计算timeRange时间内的发包数量
    Set ixia stream l2    @{testerp1}    dst_mac=00:00:00:aa:aa:aa    src_mac=00:00:00:11:11:11    stream_rate=${send_rate}    stream_rate_mode=${IXIA_StreamRateMode_bps}    stream_mode=${IXIA_StreamMode_next}
    ...    numPacket=${pktNum1}    reset=True
    Set ixia stream ip    @{testerp1}    dst_mac=00:00:00:bb:bb:bb    src_mac=00:00:00:11:11:11    stream_rate=${send_rate}    stream_rate_mode=${IXIA_StreamRateMode_bps}    stream_mode=${IXIA_StreamMode_stop}
    ...    numPacket=${pktNum2}    stream_id=${2}    reset=False
    Set ixia stream l2    @{testerp2}    dst_mac=00:00:00:aa:aa:aa    src_mac=00:00:00:22:22:22    stream_rate=${send_rate}    stream_rate_mode=${IXIA_StreamRateMode_bps}    stream_mode=${IXIA_StreamMode_next}
    ...    numPacket=${pktNum1}    reset=True
    Set ixia stream ip    @{testerp2}    dst_mac=00:00:00:bb:bb:bb    src_mac=00:00:00:22:22:22    stream_rate=${send_rate}    stream_rate_mode=${IXIA_StreamRateMode_bps}    stream_mode=${IXIA_StreamMode_stop}
    ...    numPacket=${pktNum2}    stream_id=${2}    reset=False
    Set Port Filters Da    da1=00 00 00 bb bb bb    mask1=00 00 00 00 00 00    #匹配发送的ip报文
    Set Port Filters Uds1    da=1    #使用UDS计算收到的ip报文数量
    Set Port Filters Enable    @{testerp1}
    Set Port Filters Da    da1=00 00 00 bb bb bb    mask1=00 00 00 00 00 00    #匹配发送的ip报文
    Set Port Filters Uds1    da=1    #使用UDS计算收到的ip报文数量
    Set Port Filters Enable    @{testerp2}
    ${res1}=    check limit rate for rx    ${expect_value_receive}
    ${res2}=    check limit rate for tx    ${expect_value_trans}
    Should Be True    ${res1}==${res2}==True    bandwidth control Error.
    Log Step END    step 2    带宽抑制功能正常生效
    #
    #
    Log Step Start    step 3    port-channel下没有bandwidth control配置
    ${res1}=    Check Port Show Run    ${s1_alias}    port-channel 1    ${CMD_BANDWIDTH_CONTROL} \\d+ receive
    ${res2}=    Check Port Show Run    ${s1_alias}    port-channel 1    ${CMD_BANDWIDTH_CONTROL} \\d+ receive
    Should be true    ${res1}==${res2}==False    port-channel下没有bandwidth control配置
    Log Step END    step 3    port-channel下没有bandwidth control配置
    #
    #
    Log Step Start    step 4    port-channel不能修改和删除bandwidth配置
    ${res1}=    Set Bandwidth Control Fail    ${s1_alias}    port-channel 1    1000    direction=both
    ${res2}=    Set Bandwidth Control Fail    ${s1_alias}    port-channel 1    1000    direction=receive
    ${res3}=    Set Bandwidth Control Fail    ${s1_alias}    port-channel 1    1000    direction=transmit
    Run Keyword And Continue On Failure    Should be true    ${res1}==${res2}==${res3}==True    ${TEST_NAME}port-channel不能修改bandwidth control配置
    ${res1}=    Unset Bandwidth Control Fail    ${s1_alias}    port-channel 1
    Should be true    ${res1}    ${TEST_NAME} port-channel不能删除bandwidth control配置
    Log Step END    step 4    port-channel不能修改和删除bandwidth配置
    #
    #
    Log Step Start    step 5    port-channel成员端口不能修改和删除bandwidth配置
    ${res1}=    Set Bandwidth Control Fail    ${s1_alias}    ${s1p1}    1000    direction=both
    ${res2}=    Set Bandwidth Control Fail    ${s1_alias}    ${s1p1}    1000    direction=receive
    ${res3}=    Set Bandwidth Control Fail    ${s1_alias}    ${s1p1}    1000    direction=transmit
    Run Keyword And Continue On Failure    Should be true    ${res1}==${res2}==${res3}==True    ${TEST_NAME} port-channel的成员端口不能修改bandwidth control配置
    ${res1}=    Unset Bandwidth Control Fail    ${s1_alias}    ${s1p1}
    Should be true    ${res1}    ${TEST_NAME} port-channel的成员端口不能删除bandwidth control配置
    Log Step END    step 5    port-channel成员端口不能修改和删除bandwidth配置
    #
    #
    Log Step Start    step 6    删除s1p1与s1p3的port-channel配置, 修改s1p1与s1p3的带宽抑制为不同值后, 重新聚合,聚合失败
    Unset Port Channel Member    ${s1_alias}    ${s1p1}
    Unset Port Channel Member    ${s1_alias}    ${s1p3}
    Set Bandwidth Control    ${s1_alias}    ${s1p1}    1000
    Set Bandwidth Control    ${s1_alias}    ${s1p3}    2000
    Set Port Channel Member    ${s1_alias}    ${s1p1}    channel_name=1    mode=on
    Set Port Channel Member Fail    ${s1_alias}    ${s1p3}    channel_name=1    mode=on
    Log Step End    step 6    删除s1p1与s1p3的port-channel配置, 修改s1p1与s1p3的带宽抑制为不同值后, 重新聚合,聚合失败
    #
    #
    [Teardown]    01_uninit

*** Keywords ***
01_uninit
    tools.Comment    ${SUITE_NAME}    ${TEST_NAME}    恢复配置>>>>>>
    Exec Cmd List In ConfigMode    ${s1_alias}    no port-group 1
    Unset Bandwidth Control    ${s1_alias}    ${s1p1}
    Unset Bandwidth Control    ${s1_alias}    ${s1p3}
    tools.Comment    ${SUITE_NAME}    ${TEST_NAME}    恢复配置完成<<<<<<

check limit rate for rx
    [Arguments]    ${receive_rate}    ${tolerance}=${0.05}
    ${rx1}=    Get Statics    @{testerp2}    userStat1
    ${rx1}=    Evaluate    ${rx1}*64*8
    Ixiasend.Start Transmit    @{testerp1}
    Ixiasend.Wait For Transmit Done    @{testerp1}
    Ixiasend.Stop Transmit    @{testerp1}
    ${rx2}=    Get Statics    @{testerp2}    userStat1
    ${rx2}=    Evaluate    ${rx2}*64*8
    ${limitRate}=    Evaluate    (${rx2}-${rx1})/${timeRange}
    ${res}=    Check More or Less    ${limitRate}    ${receive_rate}    ${tolerance}
    [Return]    ${res}

check limit rate for tx
    [Arguments]    ${receive_rate}    ${tolerance}=${0.05}
    ${rx1}=    Get Statics    @{testerp1}    userStat1
    ${rx1}=    Evaluate    ${rx1}*64*8
    Ixiasend.Start Transmit    @{testerp2}
    Ixiasend.Wait For Transmit Done    @{testerp2}
    Ixiasend.Stop Transmit    @{testerp2}
    ${rx2}=    Get Statics    @{testerp1}    userStat1
    ${rx2}=    Evaluate    ${rx2}*64*8
    ${limitRate}=    Evaluate    (${rx2}-${rx1})/${timeRange}
    ${res}=    Check More or Less    ${limitRate}    ${receive_rate}    ${tolerance}
    [Return]    ${res}
