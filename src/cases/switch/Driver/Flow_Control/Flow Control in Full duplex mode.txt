*** Settings ***
Documentation     全双工模式下配置flowcontrol,出端口因带宽不足而丢包时,产生pause帧
...
...               - init 初始化配置,实现拓扑
...               - step 1 全双工模式下配置flowcontrol,出端口因带宽不足而丢包时,产生pause帧
...               - step 2 关闭flowcontrol,tp1与tp2流量恢复,s1p1与s1p2不再发送流控pause帧
...               - uninit 恢复初始化配置
...
...               Topo:
...               | \ \ \ \ \ tp1 \ \ tp2
...               | \ \ \ \ \ \ | \ \ \ \ |
...               | \ \ \ \ \ \ | \ \ \ \ |
...               | \ \ +---|-----|---+
...               | \ \ | s1p1 \ \ s1p2 |
...               | \ \ | \ \ \ \ \ \ \ \ \ \ \ \ |
...               | \ \ | \ \ \ s1p3 \ \ \ \ |
...               | \ \ +----|--|-----+
...               | \ \ \ \ \ \ \ | \ |
...               | \ \ \ \ \ \ \ +--+
...
...
...               s1p1 hybrid, native vlan 10, allowed vlan 10,30 untag
...
...               s1p2 access, vlan 20
...
...               s1p3 hybrid, native vlan 30, allowed vlan 10,20,30 untag, *loopback*
...
...               通过上述配置,模拟s1p1,s1p2两个端口向s1p3端口发送流量, 形成出端口带宽不足的情况.s1p3环回后,流量从s1p1转出。
...
...               注意:s1p1,s1p2的端口总速率要大于s1p3的端口速率,否则无法形成出端口带宽不足的情况.
Suite Setup       init suite test
Suite Teardown    uninit suite test
Resource          resource_flow_control.txt

*** Test Cases ***
1.2.4.3 全双工模式下配置flowcontrol,出端口因带宽不足而丢包时,产生pause帧
    [Setup]    01_init
    Log Step Start    Step1    全双工模式下配置flowcontrol,出端口因带宽不足而丢包时,产生pause帧
    Set Flow Control    ${s1_alias}    ${s1p1}
    Set Flow Control    ${s1_alias}    ${s1p2}
    Ixiasend.Set Port Flowcontrol    @{testerp1}    1
    Ixiasend.Set Port Flowcontrol    @{testerp2}    1
    sleep    5s    等待s1p1与s1p2 UP
    Exec Cmd List    ${s1_alias}    clear counters
    Ixiasend.Clear Statics    @{testerp1}
    Ixiasend.Clear Statics    @{testerp2}
    Ixiasend.Start Transmit    @{testerp1}
    Ixiasend.Start Transmit    @{testerp2}
    sleep    10s
    Ixiasend.Stop Transmit    @{testerp1}
    Ixiasend.Stop Transmit    @{testerp2}
    sleep    10s    wait for counter update
    ${tp1_tx}    ${tp1_FCR}=    Get Statics    @{testerp1}    txpackets    flowControlFrames
    ${tp2_tx}    ${tp2_FCR}=    Get Statics    @{testerp2}    txpackets    flowControlFrames
    ${p3_tx}=    Get Show Interface Port    ${s1_alias}    ${s1p3}    out_packets
    \    #读取端口s1p1与s1p2发送的pause
    ${p1_tx}=    Get Show Interface Port    ${s1_alias}    ${s1p1}    tx_pause
    ${p2_tx}=    Get Show Interface Port    ${s1_alias}    ${s1p2}    tx_pause
    ${p1_pause}=    Get From Dictionary    ${p1_tx}    tx_pause
    ${p2_pause}=    Get From Dictionary    ${p2_tx}    tx_pause
    should be true    (${p1_pause}>${0}) and (${p2_pause}>${0}) and ${tp1_FCR}>${0} and ${tp2_FCR}>${0}    s1p1与s1p2发送pause帧
    ${res}=    Check More or Less    ${${tp1_tx}+${tp2_tx}}    ${p3_tx['out_packets']}    0.05
    should be true    ${res}    tp1与tp2发送速率受流控影响而下降,p3不应该丢包
    Log Step End    Step1
    #
    #
    Log Step Start    Step2    关闭flowcontrol,tp1与tp2流量恢复,s1p1与s1p2不再发送流控pause帧
    unSet Flow Control    ${s1_alias}    ${s1p1}
    unSet Flow Control    ${s1_alias}    ${s1p2}
    sleep    5s    等待s1p1与s1p2 UP
    Exec Cmd List    ${s1_alias}    clear counters
    Ixiasend.Clear Statics    @{testerp1}
    Ixiasend.Clear Statics    @{testerp2}
    Ixiasend.Start Transmit    @{testerp1}
    Ixiasend.Start Transmit    @{testerp2}
    sleep    10s
    ${tp1_FCR}    ${tp1_txbps}    ${tp1_ls}    Get Statics    @{testerp1}    flowControlFrames    txbps
    ...    lineSpeed
    ${tp2_FCR}    ${tp2_txbps}    ${tp2_ls}    Get Statics    @{testerp2}    flowControlFrames    txbps
    ...    lineSpeed
    \    #读取端口s1p1与s1p2发送的pause
    ${p1_tx}=    Get Show Interface Port    ${s1_alias}    ${s1p1}    tx_pause
    ${p2_tx}=    Get Show Interface Port    ${s1_alias}    ${s1p2}    tx_pause
    ${p1_pause}=    Get From Dictionary    ${p1_tx}    tx_pause
    ${p2_pause}=    Get From Dictionary    ${p2_tx}    tx_pause
    should be true    (${p1_pause}==${0}) and (${p2_pause}==${0}) and ${tp1_FCR}==${0} and ${tp2_FCR}==${0}    s1p1与s1p2不发送pause帧
    ${res1}=    Check More or Less    ${tp1_txbps}    ${${tp1_ls}*0.762*1000000}    0.1
    should be true    ${res1}    tp1与tp2发送速率恢复.达到线速
    ${res2}=    Check More or Less    ${tp2_txbps}    ${${tp2_ls}*0.762*1000000}    0.1
    should be true    ${res2}    tp1与tp2发送速率恢复.达到线速
    Log Step End    Step2
    #
    #
    [Teardown]    01_uninit

*** Keywords ***
01_init
    tools.comment    ${SUITE_NAME}    ${TEST_NAME}    配置拓扑>>>
    Exec Cmd List In ConfigMode    ${s1_alias}    interface ${s1p1}    switchport access vlan 10
    Exec Cmd List In ConfigMode    ${s1_alias}    interface ${s1p2}    switchport access vlan 20
    Exec Cmd List In ConfigMode    ${s1_alias}    interface ${s1p3}    switchport mode hybrid    switchport hybrid native vlan 30    switchport hybrid allow vlan 10;20;30 untag
    Exec Cmd List In ConfigMode    ${s1_alias}    interface ${s1p3}    loopback
    sleep    5s    wait for s1p3 up
    tools.comment    ${SUITE_NAME}    ${TEST_NAME}    配置完成<<<

01_uninit
    tools.comment    ${SUITE_NAME}    ${TEST_NAME}    恢复初始配置
    Exec Cmd List In ConfigMode    ${s1_alias}    interface ${s1p1}    no switchport mode    no switchport access vlan
    Exec Cmd List In ConfigMode    ${s1_alias}    interface ${s1p2}    no switchport mode    no switchport access vlan
    Exec Cmd List In ConfigMode    ${s1_alias}    interface ${s1p3}    no switchport mode    no switchport access vlan
    Exec Cmd List In ConfigMode    ${s1_alias}    interface ${s1p3}    no loopback
    unSet Flow Control    ${s1_alias}    ${s1p1}
    unSet Flow Control    ${s1_alias}    ${s1p2}
    Ixiasend.Stop Transmit    @{testerp1}
    Ixiasend.Stop Transmit    @{testerp2}
    Ixiasend.Set Port Config Default    @{testerp1}
    Ixiasend.Set Port Config Default    @{testerp2}
    tools.comment    ${SUITE_NAME}    ${TEST_NAME}    恢复初始结束
