*** Settings ***
Suite Setup       Init_Test_Case
Suite Teardown    Uninit_Test_Case
Test Setup
Resource          ap_configuration_vars.txt
Resource          ap_configuration_modifiable.txt

*** Test Cases ***
3.1无线使用tcp协议可以进行手动独立升级Ap
    [Documentation]    3.1.1	wireless protocol使用tcp：可以手动独立升级的方式升级ap版本
    [Tags]    all    6222
    AC.Enable Mode    ${ac1}
    AC.Exec Cmd List In WirelessMode    ${ac1}    show wireless ap status
    Telnet.Write    wireless protocol tcp
    Telnet.Read Until Regexp    \\[Y/N\\]    [-a-zA-Z0-9_. ]{1,30}(\\(.*\\))*#
    Telnet.Write    Y
    Telnet.Read Until Prompt
    sleep    ${profile_apply_time}
    AC.Exec Cmd List In WirelessMode    ${ac1}    show wireless ap status
    AC.Wait For AP Profile Apply OK    ${ac1}    ${ap1_profile}    ${WIFI_AFFIRM_AP1_MAC}
    AC.Wait For AP Profile Apply OK    ${ac1}    ${ap2_profile}    ${WIFI_AFFIRM_AP2_MAC}
    AC.Exec Cmd List In WirelessMode    ${ac1}    wireless ap download image-type ${ap1_image_type} ${ap1_old_image_string}
    AC.Enable Mode    ${ac1}
    AC.Exec Cmd    ${ac1}    wireless ap download start imagetype ${ap1_image_type}
    sleep    ${ap_upgrade_time}
    AP.Enable Mode    ${ap1}
    Telnet.Switch Connection    ${ap1}
    ${output}=    AP.Exec Cmd    ${ap1}    get system
    ${return}=    Tools.Is Match From String    ${output}    (?im)^version\\s+${ap1_old_version_string}
    Should Be True    ${return}
    AC.Exec Cmd List In WirelessMode    ${ac1}    wireless ap download image-type ${ap1_image_type} ${ap1_now_image_string}
    AC.Enable Mode    ${ac1}
    AC.Exec Cmd    ${ac1}    wireless ap download start imagetype ${ap1_image_type}
    sleep    ${ap_upgrade_time}
    AP.Enable Mode    ${ap1}
    Telnet.Switch Connection    ${ap1}
    ${output}=    AP.Exec Cmd    ${ap1}    get system
    ${return}=    Tools.Is Match From String    ${output}    (?im)^version\\s+${ap1_now_version_string}
    Should Be True    ${return}
    AC.Enable Mode    ${ac1}
    AC.Exec Cmd List In WirelessMode    ${ac1}    show wireless ap status
    Telnet.Write    wireless protocol tls
    Telnet.Read Until Regexp    \\[Y/N\\]    [-a-zA-Z0-9_. ]{1,30}(\\(.*\\))*#
    Telnet.Write    Y
    Telnet.Read Until Prompt
    sleep    ${profile_apply_time}
    AC.Exec Cmd List In WirelessMode    ${ac1}    show wireless ap status
    AC.Wait For AP Profile Apply OK    ${ac1}    ${ap1_profile}    ${WIFI_AFFIRM_AP1_MAC}
    AC.Wait For AP Profile Apply OK    ${ac1}    ${ap2_profile}    ${WIFI_AFFIRM_AP2_MAC}

3.2无线使用tcp协议可以进行自动集成升级
    [Documentation]    3.1.2	wireless protocol使用tcp：可以集成升级的方式自动升级ap版本
    [Tags]    6222
    AC.Enable Mode    ${ac1}
    AC.Exec Cmd List In WirelessMode    ${ac1}    show wireless ap status
    Telnet.Write    wireless protocol tcp
    Telnet.Read Until Regexp    \\[Y/N\\]    [-a-zA-Z0-9_. ]{1,30}(\\(.*\\))*#
    Telnet.Write    Y
    Telnet.Read Until Prompt
    sleep    ${profile_apply_time}
    AC.Exec Cmd List In WirelessMode    ${ac1}    show wireless ap status
    AC.Wait For AP Profile Apply OK    ${ac1}    ${ap1_profile}    ${WIFI_AFFIRM_AP1_MAC}
    AC.Wait For AP Profile Apply OK    ${ac1}    ${ap2_profile}    ${WIFI_AFFIRM_AP2_MAC}
    AC.Exec Cmd List In WirelessMode    ${ac1}    wireless ap integrated \ image-type ${ap1_image_type} ${ap1_6222_old_image_string}    ap auto-upgrade
    AP.Reboot AP    ${ap1}
    sleep    ${ap_upgrade_time}
    sleep    ${ap_upgrade_time}
    AP.Enable Mode    ${ap1}
    Telnet.Switch Connection    ${ap1}
    ${output}=    AP.Exec Cmd    ${ap1}    get system
    ${return}=    Tools.Is Match From String    ${output}    (?im)^version\\s+${ap1_old_version_string}
    Should Be True    ${return}
    AP.Enable Mode    ${ap2}
    Telnet.Switch Connection    ${ap2}
    ${output}=    AP.Exec Cmd    ${ap2}    get system
    ${return}=    Tools.Is Match From String    ${output}    (?im)^version\\s+${ap2_now_version_string}
    Should Be True    ${return}
    AC.Exec Cmd List In WirelessMode    ${ac1}    wireless ap integrated \ image-type ${ap1_image_type} ${ap1_6222_now_image_string}
    AP.Reboot AP    ${ap1}
    sleep    ${ap_upgrade_time}
    sleep    ${ap_upgrade_time}
    AP.Enable Mode    ${ap1}
    Telnet.Switch Connection    ${ap1}
    ${output}=    AP.Exec Cmd    ${ap1}    get system
    ${return}=    Tools.Is Match From String    ${output}    (?im)^version\\s+${ap1_now_version_string}
    Should Be True    ${return}
    AC.Exec Cmd List In WirelessMode    ${ac1}    no ap auto-upgrade
    AC.Enable Mode    ${ac1}
    AC.Exec Cmd List In WirelessMode    ${ac1}    show wireless ap status
    Telnet.Write    wireless protocol tls
    Telnet.Read Until Regexp    \\[Y/N\\]    [-a-zA-Z0-9_. ]{1,30}(\\(.*\\))*#
    Telnet.Write    Y
    Telnet.Read Until Prompt
    sleep    ${profile_apply_time}
    AC.Exec Cmd List In WirelessMode    ${ac1}    show wireless ap status
    AC.Wait For AP Profile Apply OK    ${ac1}    ${ap1_profile}    ${WIFI_AFFIRM_AP1_MAC}
    AC.Wait For AP Profile Apply OK    ${ac1}    ${ap2_profile}    ${WIFI_AFFIRM_AP2_MAC}

3.3Tftp进行独立手动升级
    [Documentation]    7.1.1	采用tftp服务器：为AP指定image文件后，通过手动更新的方式能够为AP更新image，更新完成后AP重启，并重新认证关联。
    [Tags]    all    6222
    AC.Exec Cmd List In WirelessMode    ${ac1}    wireless ap download image-type ${ap1_image_type} ${ap1_tftp_old_image_string}
    AC.Enable Mode    ${ac1}
    AC.Exec Cmd    ${ac1}    wireless ap download start imagetype ${ap1_image_type}
    sleep    ${ap_upgrade_time}
    AP.Enable Mode    ${ap1}
    Telnet.Switch Connection    ${ap1}
    ${output}=    AP.Exec Cmd    ${ap1}    get system
    ${return}=    Tools.Is Match From String    ${output}    (?im)version\\s+${ap1_old_version_string}
    Should Be True    ${return}
    AC.Exec Cmd List In WirelessMode    ${ac1}    wireless ap download image-type ${ap1_image_type} ${ap1_tftp_now_image_string}
    AC.Enable Mode    ${ac1}
    AC.Exec Cmd    ${ac1}    wireless ap download start imagetype ${ap1_image_type}
    sleep    ${ap_upgrade_time}
    AP.Enable Mode    ${ap1}
    Telnet.Switch Connection    ${ap1}
    ${output}=    AP.Exec Cmd    ${ap1}    get system
    ${return}=    Tools.Is Match From String    ${output}    (?im)^version\\s+${ap1_now_version_string}
    Should Be True    ${return}
